{"version":3,"sources":["views/Gant/Gant.js"],"names":["DemoApp","calendarComponentRef","React","createRef","state","calendarWeekends","calendarEvents","title","start","Date","toggleWeekends","setState","gotoPast","current","getApi","gotoDate","handleDateClick","arg","concat","date","allDay","className","onClick","this","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ref","weekends","events","dateClick","Component"],"mappings":"oVAQqBA,G,oNAEnBC,qBAAuBC,IAAMC,Y,EAC7BC,MAAQ,CACNC,kBAAkB,EAClBC,eAAgB,CACd,CAAEC,MAAO,YAAaC,MAAO,IAAIC,Q,EA+BrCC,eAAiB,WACf,EAAKC,SAAS,CACZN,kBAAmB,EAAKD,MAAMC,oB,EAIlCO,SAAW,WACS,EAAKX,qBAAqBY,QAAQC,SACxCC,SAAS,e,EAGvBC,gBAAkB,SAACC,GAEf,EAAKN,SAAS,CACZL,eAAgB,EAAKF,MAAME,eAAeY,OAAO,CAC/CX,MAAO,YACPC,MAAOS,EAAIE,KACXC,OAAQH,EAAIG,Y,uDA3ClB,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAQC,QAAUC,KAAKb,gBAAvB,mBADF,OAEE,4BAAQY,QAAUC,KAAKX,UAAvB,4BAFF,kDAKA,yBAAKS,UAAU,qBACb,kBAAC,IAAD,CACEG,YAAY,eACZC,OAAQ,CACNC,KAAM,kBACNC,OAAQ,QACRC,MAAO,kDAETC,QAAS,CAAEC,IAAeC,IAAgBC,KAC1CC,IAAMV,KAAKtB,qBACXiC,SAAWX,KAAKnB,MAAMC,iBACtB8B,OAASZ,KAAKnB,MAAME,eACnB8B,UAAYb,KAAKP,wB,GA9BOd,IAAMmC","file":"static/js/43.48569017.chunk.js","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\n\nimport './main.scss'\n\nexport default class DemoApp extends React.Component {\n\n  calendarComponentRef = React.createRef()\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [ // initial event data\n      { title: 'Event Now', start: new Date() }\n    ]\n  }\n\n  render() {\n    return (\n      <div className='demo-app'>\n        <div className='demo-app-top'>\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\n          (also, click a date/time to add an event)\n        </div>\n        <div className='demo-app-calendar'>\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n            }}\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\n            ref={ this.calendarComponentRef }\n            weekends={ this.state.calendarWeekends }\n            events={ this.state.calendarEvents }\n             dateClick={ this.handleDateClick }\n            />\n        </div>\n      </div>\n    )\n  }\n\n  toggleWeekends = () => {\n    this.setState({ // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    })\n  }\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi()\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\n  }\n\n  handleDateClick = (arg) => {\n    //if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n      this.setState({  // add new event data\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n          title: 'New Event',\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      })\n    }\n  //}\n\n}"],"sourceRoot":""}