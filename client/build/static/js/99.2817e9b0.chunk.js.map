{"version":3,"sources":["views/Pages/Login/slider.js","views/Pages/Login/Login.js"],"names":["slideImages","properties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","onChange","oldIndex","newIndex","Slideshow","react_default","a","createElement","className","react_slideshow_image_min","style","backgroundImage","concat","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","authenticated","status","region","division","ldapBind","ldapSearch","invalidTmUser","invalidTmUser2","LdapFailedfindUser","wrongPass","wrongUsername","handleChange","bind","assertThisInitialized","handleChange2","event","setState","target","value","Typography","variant","color","align","src","width","Date","getFullYear","_this2","Container","Row","Col","md","CardGroup","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","id","name","autoComplete","xs","Button","onClick","auth","handleLogin","history","push","Box","mt","Copyright","slider","Component"],"mappings":"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","file":"static/js/99.2817e9b0.chunk.js","sourcesContent":["import React from 'react';\nimport { Slide } from 'react-slideshow-image';\nimport './slide.css';\nimport 'react-slideshow-image/dist/styles.css';\n \nconst slideImages = [\n  '/assets/img/rack.jpg',\n  '/assets/img/ups.jpg',\n  '/assets/img/dashboard.jpg'\n];\n \nconst properties = {\n  duration: 5000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  arrows: true,\n  pauseOnHover: true,\n  onChange: (oldIndex, newIndex) => {\n  //  console.log(`slide transition from ${oldIndex} to ${newIndex}`);\n  }\n}\n \nconst Slideshow = () => {\n    return (\n      <div className=\"slide-container\">\n        <Slide {...properties}>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[0]})`}}>\n              {/* <span>RACK</span> */}\n            </div>\n          </div>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[1]})`}}>\n              {/* <span>UPS</span> */}\n            </div>\n          </div>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[2]})`}}>\n              {/* <span>Slide 3</span> */}\n            </div>\n          </div>\n        </Slide>\n      </div>\n    )\n}\n\nexport default Slideshow;","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport auth from \"../../../auth\";\nimport Slider from './slider';\nimport {Typography, Box} from '@material-ui/core';\n\nclass Login extends Component {\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n\n      username:\"\",\n      password:\"\",\n      authenticated:{\n        status:false,\n        region:\"\",\n        division:\"\",\n         ldapBind: \"\",\n         ldapSearch: \"\",\n        invalidTmUser:\"\", \n        invalidTmUser2: \"\", \n        LdapFailedfindUser: \"\", \n        wrongPass: \"\",\n        wrongUsername: \"\"\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({username: event.target.value});\n  }\n\n  handleChange2(event) {\n    this.setState({password: event.target.value});\n  }\n\n  Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        <img src=\"/assets/img/Telekom.png\" style={{width: '10%'}} />\n        {'Copyright Â© '}\n          DC Portal\n        {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  render() {\n   // console.log('auth',auth.isAuthenticated());\n    \n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                  {/* <span>{auth.isAuthenticated().ldapSearch}</span> */}\n                    <Form /*action=\"/dco/login\" method=\"post\" */>\n                      <center><img src=\"/assets/img/dcLogo.png\" style={{width: '80%'}} />\n                      {/* <h3>Login</h3> */}\n                      {/* <p className=\"text-muted\">Sign In to your account</p> */}\n                      </center>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" placeholder=\"Username\"  id=\"username\" name=\"username\"  autoComplete=\"username\" onChange={this.handleChange}  />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" autoComplete=\"current-password\"  onChange={this.handleChange2} />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"primary\" className=\"px-4\"   onClick={() => {\n                            auth.handleLogin(this.state.username,this.state.password,() => {\n                              this.props.history.push(\"/\");\n                            });\n                          }} \n                          >Login</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\n                        </Col>\n                      </Row>\n                      <Row>\n                      <Box mt={5}>\n                        {this.Copyright()}\n                        </Box>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white py-5 d-md-down-none\">\n                  <CardBody className=\"text-center\">\n                    <div>\n                    <Slider />\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}