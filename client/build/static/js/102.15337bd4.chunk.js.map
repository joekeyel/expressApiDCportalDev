{"version":3,"sources":["views/Dashboard/Summary.js"],"names":["axios","require","Summary","props","_React$useState","React","useState","_React$useState2","Object","_mnt_c_Users_hasan_coreuidcportal_coreuifirebase_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","allData","setAllData","_React$useState3","_React$useState4","_React$useState5","_React$useState6","barData","setBarData","useEffect","get","then","response","data","makeBar","catch","error","console","log","spaceData","spaceData2","spaceLabel","spaceLabel2","map","d","push","SPACE_AVAILABLE","SPACE_UTILIZED","LOCN_NAME","SPACE_CAPACITY","labels","datasets","stack","label","indexLabel","backgroundColor","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","container","react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__","options","scales","xAxes","stacked","yAxes","index","plugins","datalabels","display","color","animation","duration","item","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","body","style","width","height","alignItems","reactstrap__WEBPACK_IMPORTED_MODULE_9__","colorPower","colorSpace","colorRack","POWER_UTILIZATION","SPACE_UTILIZATION","RACK_UTILIZATION","xs","sm","md","lg","id","LOCN_ID","padding","className","marginBottom","reactstrap__WEBPACK_IMPORTED_MODULE_10__","POWER_INSERVICE","POWER_RESERVED","POWER_CAPACITY","RACK_UTILIZED","RACK_CAPACITY"],"mappings":"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","file":"static/js/102.15337bd4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport Container from '@material-ui/core/Container';\nimport {Grid, Paper, Box } from '@material-ui/core';\nimport 'chartjs-plugin-datalabels';\nimport { Badge, Button,CardTitle,CardText, Card, CardBody, CardFooter, CardHeader,Progress, Col, Form, FormGroup, Label, Row, Input } from 'reactstrap';\n\nconst axios = require('axios');\n\nconst Summary = (props) => {\n    const [allData, setAllData] = React.useState([]);\n    const [cardColor, setCardColor] = React.useState('');\n    const [barData, setBarData] = React.useState([]);\n\n    useEffect(() => {\n        axios.get('/claritybqm/reportFetch/?scriptName=DC_DASHBOARD_INFO')\n            .then(function (response) {\n                //console.log('d',response.data);\n            \n                // handle success\n                if (response.data) {\n                    setAllData(response.data);\n                    makeBar(response.data);\n                };\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    });\n\n\n    const makeBar = (data) => {\n        //console.log('makeBar',data);\n        \n        var spaceData = [],\n            spaceData2 = [],\n            spaceLabel = [],\n            spaceLabel2 = [];\n\n        data.map((d) => {\n            spaceData.push(d.SPACE_AVAILABLE);\n            spaceData2.push(d.SPACE_UTILIZED);\n            spaceLabel.push(d.LOCN_NAME);\n            spaceLabel2.push(d.SPACE_CAPACITY);\n        });\n\n        const arbitraryStackKey = \"stack\"; /**to make stack bar */\n\n        const state = {\n            labels: spaceLabel,\n            datasets: [\n                {\n                    stack: arbitraryStackKey,\n                    label: 'Available DC Space (sqft)',\n                    indexLabel: spaceLabel2,\n                    backgroundColor: 'rgba(0, 20, 187)',\n                    data: spaceData\n                  },\n                  {\n                    stack: arbitraryStackKey,\n                    label: 'Utilize DC Space (sqft)',\n                    backgroundColor: 'rgba(248, 111, 27)',\n                    data: spaceData2   \n                  }\n                // {\n                //     label: 'Available DC Space (sqft)',\n                //     backgroundColor: 'rgba(0, 20, 187)',\n                //     borderColor: 'rgba(255,99,132,1)',\n                //     borderWidth: 1,\n                //     //hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                //     //hoverBorderColor: 'rgba(255,99,132,1)',\n                //     data: spaceData\n                // },\n                // {\n                //     label: 'Utilize DC Space (sqft)',\n                //     backgroundColor: 'rgba(248, 111, 27)',\n                //     borderColor: 'rgba(255,99,132,1)',\n                //     borderWidth: 1,\n                //     //hoverBackgroundColor: 'rgba(182, 248, 115)',\n                //     //hoverBorderColor: 'rgba(255,99,132,1)',\n                //     data: spaceData2\n                // }\n            ]\n        };\n        setBarData(state);\n\n    }\n\n    const options = {\n        scales: {\n             xAxes: [{\n                 stacked: true,\n             }],\n             yAxes: [{\n                 stacked: true,\n                 index: true\n             }]\n         },\n         plugins: {/**display label inside bar */\n            datalabels: {\n               display: true,\n               color: 'white',\n            }\n         },\n         animation: {\n            duration: 0,\n            // onComplete: function () {\n            //     var ctx = props.chart.ctx;\n            //     ctx.font = props.Chart.helpers.fontString(props.Chart.defaults.global.defaultFontFamily, 'normal', props.Chart.defaults.global.defaultFontFamily);\n            //     ctx.fillStyle = \"black\";\n            //     ctx.textAlign = 'center';\n            //     ctx.textBaseline = 'bottom';\n        \n            //     this.data.datasets.forEach(function (dataset)\n            //     {\n            //         for (var i = 0; i < dataset.data.length; i++) {\n            //             for(var key in dataset._meta)\n            //             {\n            //                 var model = dataset._meta[key].data[i]._model;\n            //                 ctx.fillText(dataset.data[i], model.x, model.y - 5);\n            //             }\n            //         }\n            //     });\n            // }\n          },\n     }\n    \n    return (<Container>\n            <Grid container>\n                <h2>SUMMARY OF DC LOCATION SPACE UTILIZATION</h2>\n                <Bar \n                    data={barData} \n                    options={options}\n                />\n            </Grid>\n            <Grid container>\n            <h2>EXECUTIVE SUMMARY FOR DCO 1</h2>\n            <Grid container>\n                <Grid item>\n                <h5>Lagend:</h5>\n                        <Row>\n                            <Col>\n                                <Card body color=\"success\" style={{width:'180px', height: '5px', alignItems: 'center'}}><CardTitle><h6>Below 70%</h6></CardTitle></Card>\n                            </Col>\n                            <Col>\n                                <Card body color=\"warning\" style={{width:'180px', height: '5px', alignItems: 'center'}}><CardTitle><h6>Between 70%-98%</h6></CardTitle></Card>\n                            </Col>\n                            <Col>\n                                <Card body color=\"danger\" style={{width:'180px', height: '5px', alignItems: 'center'}}><CardTitle><h6>90% and above</h6></CardTitle></Card>\n                            </Col>\n                        </Row>\n               </Grid>\n             </Grid>\n            <Grid container>\n                    {\n                        allData.map((d,index)=>{\n                            \n                            var colorPower = \"\";\n                            var colorSpace = \"\";\n                            var colorRack = \"\";\n                            \n                            if(d.POWER_UTILIZATION < '75%'){\n                                colorPower= \"success\" \n                            }\n                            else if(d.POWER_UTILIZATION >= '75%'){\n                                colorPower= \"warning\"\n                            }\n                            else if(d.POWER_UTILIZATION >= '90%'){\n                                colorPower= \"danger\"\n                            }\n\n                            if(d.SPACE_UTILIZATION < '75%'){\n                                colorSpace= \"success\"  \n                            }\n                            else if(d.SPACE_UTILIZATION >= '75%'){\n                                colorSpace= \"warning\"\n                            }\n                            else if(d.SPACE_UTILIZATION >= '90%'){\n                                colorSpace= \"danger\"\n                            }\n\n                            if(d.RACK_UTILIZATION < '75%'){\n                                colorRack= \"success\"   \n                            }\n                            else if(d.RACK_UTILIZATION >= '75%'){\n                                colorRack= \"warning\"\n                            }\n                            else if(d.RACK_UTILIZATION >= '90%'){\n                                colorRack= \"danger\"\n                            }\n                        \n                    \n                            return(\n                                <Grid item xs={12} sm={12} md={4} lg={4}>\n                                    <Card id={d.LOCN_ID} style={{padding: '10px'}}>\n                                        <div className=\"animated fadeIn\" style={{padding: '10px'}}>\n                                        <h6>{d.LOCN_NAME}</h6>\n                                        <Card body id={d.POWER_UTILIZATION} color={colorPower} style={{marginBottom: '0px'}}>\n                                            <Row>\n                                                <Col xs='4'>\n                                                    <CardTitle><h3><strong>{d.POWER_UTILIZATION}</strong></h3></CardTitle>\n                                                    <CardText>Used & Reserved Power</CardText>\n                                                </Col>\n                                                <Col xs='2'>\n                                                    <CardText>{d.POWER_UTILIZATION}</CardText>{ /** used power percentage */}\n                                                    <CardText>{d.POWER_UTILIZATION}</CardText>{ /** reserved power percentege*/}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>{d.POWER_INSERVICE} (kW)</CardText>{ /** used power */}\n                                                    <CardText>{d.POWER_RESERVED} (kW)</CardText>{ /** reserved power */}\n                                                    <CardText>{d.POWER_CAPACITY} (kW)</CardText>{ /** capacity power */}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>Used</CardText>{ /** used power */}\n                                                    <CardText>Reserved</CardText>{ /** reserved power */}\n                                                    <CardText>Capacity</CardText>{ /** capacity power */}\n                                                </Col>\n                                            </Row>\n                                        </Card>\n                                        <Card body id={d.SPACE_UTILIZATION} color={colorSpace} style={{marginBottom: '0px'}}>\n                                            <Row>\n                                                <Col xs='4'>\n                                                    <CardTitle><h3><strong>{d.SPACE_UTILIZATION}</strong></h3></CardTitle>\n                                                    <CardText>Used Space</CardText>\n                                                </Col>\n                                                <Col xs='2'>\n                                                {/**empty */}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>{d.SPACE_UTILIZED} (sqft)</CardText>{ /** used space */}\n                                                    <CardText>{d.SPACE_CAPACITY} (sqft)</CardText>{ /** capacity space */}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>Used</CardText>{ /** used space */}\n                                                    <CardText>Capacity</CardText>{ /** capacity space */}\n                                                </Col>\n                                            </Row>\n                                        </Card>\n                                        <Card body id={d.RACK_UTILIZATION} color={colorRack} style={{marginBottom: '0px'}}>\n                                            <Row>\n                                                <Col xs='4'>\n                                                    <CardTitle><h3><strong>{d.RACK_UTILIZATION}</strong></h3></CardTitle>\n                                                    <CardText>Used Rack</CardText>\n                                                </Col>\n                                                <Col xs='2'>\n                                                {/**empty */}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>{d.RACK_UTILIZED} (onos)</CardText>{ /** used rack */}\n                                                    <CardText>{d.RACK_CAPACITY} (onos)</CardText>{ /** capacity rack */}\n                                                </Col>\n                                                <Col xs='3'>\n                                                    <CardText>Used</CardText>{ /** used rack */}\n                                                    <CardText>Capacity</CardText>{ /** capacity rack */}\n                                                </Col>\n                                            </Row>\n                                        </Card>\n                                    </div>\n                                    </Card>\n                            </Grid>\n                            )\n                        })\n                    }\n             </Grid>\n        </Grid>\n        </Container>);\n}\nexport default Summary;"],"sourceRoot":""}