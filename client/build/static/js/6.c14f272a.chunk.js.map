{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","module","exports","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","i","freeGlobal","freeSelf","self","root","Function","isArray","Array","baseIsNative","getValue","key","value","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","process","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","this","_this","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","apply","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","has","eq","array","nativeCreate","getNative","isKeyable","__data__","isSymbol","INFINITY","result","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/6.c14f272a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    _classCallCheck(this, ChartComponent);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\n    _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    };\n\n    _this.ref = function (element) {\n      _this.element = element;\n    };\n\n    _this.chartInstance = undefined;\n    return _this;\n  }\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type && next.data) {\n        // Be robust to no data. Relevant for other update mechanisms as in chartjs-plugin-streaming.\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    if (!this.chartInstance) {\n      return;\n    } // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n\n\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}