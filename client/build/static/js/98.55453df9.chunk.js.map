{"version":3,"sources":["../node_modules/reactstrap/es/Badge.js","../node_modules/reactstrap/es/ListGroup.js","../node_modules/reactstrap/es/ListGroupItem.js","views/TaskList/taskList.js"],"names":["propTypes","color","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","className","cssModule","Badge","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","defaultProps","flush","ListGroup","active","disabled","action","any","handleDisabledOnClick","e","preventDefault","ListGroupItem","onClick","TaskList","toggle","bind","state","activeTab","tab","this","setState","outline","Component"],"mappings":"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","file":"static/js/98.55453df9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul'\n};\n\nvar ListGroup = function ListGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      flush = props.flush,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"flush\"]);\n\n  var classes = mapToCssModules(classNames(className, 'list-group', flush ? 'list-group-flush' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\nexport default ListGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nvar ListGroupItem = function ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default ListGroupItem;","import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Row, TabContent, TabPane } from 'reactstrap';\nimport FontAwesome from '../Icons/FontAwesome/FontAwesome';\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\n\nclass TaskList extends Component {\nconstructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n        activeTab: 1\n    };\n    }\n\n    toggle(tab) {\n    if (this.state.activeTab !== tab) {\n        this.setState({\n        activeTab: tab\n        });\n    }\n    }\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n       <Row>\n          <Card color=\"success\" outline>\n            <CardHeader>Task List</CardHeader>\n            <CardBody>\n                <ListGroup className=\"list-group-accent\" tag={'div'}>\n                  <ListGroupItem action /*tag=\"a\" href=\"#\"*/ className=\"list-group-item-accent-warning list-group-item-divider\">\n                    <div> <i className=\"icon-envelope-open \"></i> Coordinate Proc Process (Centralized Contract) </div>\n                    <div className=\"float-right\">\n                    <p><em>Action by</em></p> <Badge color=\"warning\" className=\"pull-right\" pill>DC Prod</Badge> \n                    </div>\n                  </ListGroupItem>\n                  <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-success list-group-item-divider\">\n                    <div> <i className=\"cui-inbox icons \"></i> Perform Site Prep </div>\n                    <div className=\"float-right\">\n                    <p><em>Action by</em></p>\n                    <Badge color=\"success\" className=\"pull-right\" pill>Technology Delivery</Badge>\n                    </div>\n                  </ListGroupItem>\n                  <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-warning list-group-item-divider\">\n                    <div> <i className=\"icon-envelope-open \"></i> Perform Service Handover </div>\n                    <div className=\"float-right\">\n                    <p><em>Action by</em></p>\n                    <Badge color=\"warning\" className=\"pull-right\" pill>PM</Badge>\n                    </div>\n                  </ListGroupItem>\n                  <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-success list-group-item-divider\">\n                    <div>  <i className=\"cui-inbox icons \"></i> Verify Handover Document </div>\n                    <div className=\"float-right\">\n                    <p><em>Action by</em></p>\n                    <Badge color=\"success\" className=\"pull-right\" pill>OTM</Badge>\n                    </div>\n                  </ListGroupItem>\n                </ListGroup>\n            </CardBody>\n          </Card>\n        </Row>\n       </div>\n    );\n  }\n}\n\nexport default TaskList;\n"],"sourceRoot":""}